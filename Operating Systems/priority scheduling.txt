#include<stdio.h>
struct process
{ int pid,btime,wtime,ttime,pri;}p[10];
int main()
{ int i,j,k,l,n,pw;
  int ps[10];
  float twat,ttut;
  float awat,atut;
  printf("\nEnter the no' of processes: ");
  scanf("%d",&n);
  printf("\nEnter processes details:- ");
  for(i=1;i<=n;i++)
  { printf("\nEnter burst time for process %d: ",i);
    scanf("%d",&p[i].btime); 
    printf("\nEnter priority for process %d: ",i);
    scanf("%d",&p[i].pri);
    p[i].pid=i;}
  pw=0;
  k=0; 
  for(l=1;l<=5;l++)
  { j=1000;
    for(i=1;i<=n;i++)
    { if(p[i].pri<=j && ps[i]!=1)
      { j=p[i].pri;
        k=i;}}
    ps[k]=1;
    p[k].wtime=pw;
    pw=pw+p[k].btime;}
  twat=0; ttut=0;
  for(i=1;i<=n;i++)
  { p[i].ttime=p[i].wtime+p[i].btime;}
  for(i=1;i<=n;i++)
  { twat+=p[i].wtime;
    ttut+=p[i].ttime;}
  awat=twat/n;
  atut=ttut/n;
  printf("\n\nPRIORITY SCHEDULING\n");
  printf("\nProcess\tPriority\tWtime\tBtime\tTtime");
  for(i=1;i<=n;i++)
  { printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d",p[i].pid,p[i].pri,p[i].wtime,p[i].btime,p[i].ttime);}
  printf("\n\nAverage waiting time: %f\nAverage turn around time: %f",awat,atut);
  printf("\nGNATT CHART:-\n");
  k=p[n-1].ttime;
  for(i=0;i<k;i++)
  { printf("-");}
  printf("\n");
  printf("|");
  for(l=1;l<=n;l++)
  { j=1000;
    for(i=1;i<=n;i++)
    { if(p[i].pri<=j && ps[i]!=2)
      { j=p[i].pri;
        k=i;}}
    ps[k]++;
    for(j=0;j<(p[k].btime)/2;j++)
    { printf(" ");}
    printf("%d",p[k].pid);
    for(j=(p[k].btime)/2;j<p[k].btime;j++)
    { printf(" ");}
    printf("|");}
  printf("\n0");
  for(l=1;l<=n;l++)
  { j=1000;
    for(i=1;i<=n;i++)
    { if(p[i].pri<=j && ps[i]!=3)
      { j=p[i].pri;
        k=i;}}
    ps[k]++;
    for(j=0;j<p[k].btime;j++)
    { printf(" ");}
    printf("%d",p[k].ttime);}
  return 0;}